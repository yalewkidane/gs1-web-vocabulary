import type { GraphPointer } from 'clownface';
import type { DatasetCore, Term } from '@rdfjs/types';
import type { Environment } from './defaultEnv.js';
import type { Namespaces } from './namespaces.js';
/**
 * Result of a SHACL validation.
 */
export declare class ValidationReport {
    factory: Environment;
    ns: Namespaces;
    pointer: GraphPointer;
    term: Term;
    dataset: DatasetCore;
    conforms: boolean;
    results: ValidationResult[];
    constructor(pointer: GraphPointer, options?: {
        factory?: Environment;
        ns?: Namespaces;
    });
}
export declare class ValidationResult {
    private pointer;
    private ns;
    term: Term;
    dataset: DatasetCore;
    constructor(pointer: GraphPointer, ns: Namespaces);
    get message(): Term[];
    get path(): Term;
    get focusNode(): Term;
    get severity(): Term;
    get sourceConstraintComponent(): Term;
    get sourceShape(): Term;
    get value(): Term;
    get detail(): ValidationResult[];
}
export default ValidationReport;
